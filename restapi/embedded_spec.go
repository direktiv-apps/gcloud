// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run Google gcloud commands in Direktiv",
    "title": "gcloud",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "cloud",
        "gcp"
      ],
      "container": "gcr.io/direktiv/apps/gcloud",
      "issues": "https://github.com/direktiv-apps/gcloud/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function executes alist of commans. It can run gcloud commands but has basic build tools installed as well, e.g. git.\n",
      "maintainer": "[direktiv.io](https://www.direktiv.io)",
      "url": "https://github.com/direktiv-apps/gcloud"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "account",
                "project"
              ],
              "properties": {
                "account": {
                  "description": "Service account name",
                  "type": "string",
                  "example": "sa@myproject.iam.gserviceaccount.com"
                },
                "commands": {
                  "description": "Array of commands.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command to run",
                        "type": "string",
                        "example": "gcloud compute instances list --format=json"
                      },
                      "continue": {
                        "description": "Stops excecution if command fails, otherwise proceeds with next command",
                        "type": "boolean"
                      },
                      "print": {
                        "description": "If set to false the command will not print the full command with arguments to logs.",
                        "type": "boolean",
                        "default": true
                      },
                      "silent": {
                        "description": "If set to false the command will not print output to logs.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                "key": {
                  "description": "Base64 encoded JSON access file (IAM). If not provided the function uses ` + "`" + `key.json` + "`" + `.",
                  "type": "string"
                },
                "project": {
                  "description": "Specifies the project name.",
                  "type": "string",
                  "example": "my-project-234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a list of results",
            "schema": {
              "type": "object",
              "properties": {
                "gcloud": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "success",
                      "result"
                    ],
                    "properties": {
                      "result": {
                        "additionalProperties": false
                      },
                      "success": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "gcloud": {
                "gcloud": [
                  {
                    "result": [
                      {
                        "createTime": "2021-03-25T23:35:39.884256611Z",
                        "finishTime": "2021-03-25T23:37:13.835995Z",
                        "id": 123,
                        "options": {
                          "logging": "LEGACY"
                        },
                        "queueTtl": "3600s",
                        "results": {
                          "buildStepImages": [
                            ""
                          ],
                          "buildStepOutputs": [
                            ""
                          ]
                        },
                        "sourceProvenance": {},
                        "startTime": "2021-03-25T23:35:41.802247339Z",
                        "status": "SUCCESS",
                        "success": true,
                        "timing": {
                          "BUILD": {
                            "endTime": "2021-03-25T23:37:12.877607119Z",
                            "startTime": "2021-03-25T23:35:43.804308897Z"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "continue": false,
              "exec": "{{- if not (empty .Key) }}\nbash -c 'echo {{ .Key }} | base64 -d \u003e key.json'\n{{- else }}\necho \"using existing key.json file\"\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "continue": false,
              "env": [
                "HOME={{ .DirektivDir }}"
              ],
              "exec": "gcloud auth activate-service-account {{ .Account }} --key-file=key.json",
              "print": false
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "env": [
                "HOME={{ .DirektivDir }}",
                "CLOUDSDK_CORE_PROJECT={{ .Body.Project }}"
              ],
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"gcloud\": {{ index . 2 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: gcloud\n       action:\n       function: gcloud-build\n       secrets: [\"gcloud\"]\n       input:\n         continue: false\n         account: serviceaccount@project.iam.gserviceaccount.com\n         project: project\n         key: jq(.secrets.gcloud | @base64 )\n         commands:\n         - gcloud compute instances list --format=json",
            "title": "Basic"
          },
          {
            "content": "- id: req\n     type: action\n     action:\n      function: gcloud\n      secrets: [\"gcloud\"]\n      input:\n        account: serviceaccount@project.iam.gserviceaccount.com\n        project: project\n        key: jq(.secrets.gcloud | @base64 )\n        files:\n        - name: test.sh\n          mode: \"0755\"\n          data: |-\n            #!/bin/bash\n            gcloud builds list --format=json\n        commands:\n        - ./test.sh",
            "title": "Running Scripts"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: gcloud\n    image: gcr.io/direktiv/apps/gcloud:1.0\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Run Google gcloud commands in Direktiv",
    "title": "gcloud",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "cloud",
        "gcp"
      ],
      "container": "gcr.io/direktiv/apps/gcloud",
      "issues": "https://github.com/direktiv-apps/gcloud/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This function executes alist of commans. It can run gcloud commands but has basic build tools installed as well, e.g. git.\n",
      "maintainer": "[direktiv.io](https://www.direktiv.io)",
      "url": "https://github.com/direktiv-apps/gcloud"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "account",
                "project"
              ],
              "properties": {
                "account": {
                  "description": "Service account name",
                  "type": "string",
                  "example": "sa@myproject.iam.gserviceaccount.com"
                },
                "commands": {
                  "description": "Array of commands.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CommandsItems0"
                  }
                },
                "key": {
                  "description": "Base64 encoded JSON access file (IAM). If not provided the function uses ` + "`" + `key.json` + "`" + `.",
                  "type": "string"
                },
                "project": {
                  "description": "Specifies the project name.",
                  "type": "string",
                  "example": "my-project-234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Responds with a list of results",
            "schema": {
              "type": "object",
              "properties": {
                "gcloud": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GcloudItems0"
                  }
                }
              }
            },
            "examples": {
              "gcloud": {
                "gcloud": [
                  {
                    "result": [
                      {
                        "createTime": "2021-03-25T23:35:39.884256611Z",
                        "finishTime": "2021-03-25T23:37:13.835995Z",
                        "id": 123,
                        "options": {
                          "logging": "LEGACY"
                        },
                        "queueTtl": "3600s",
                        "results": {
                          "buildStepImages": [
                            ""
                          ],
                          "buildStepOutputs": [
                            ""
                          ]
                        },
                        "sourceProvenance": {},
                        "startTime": "2021-03-25T23:35:41.802247339Z",
                        "status": "SUCCESS",
                        "success": true,
                        "timing": {
                          "BUILD": {
                            "endTime": "2021-03-25T23:37:12.877607119Z",
                            "startTime": "2021-03-25T23:35:43.804308897Z"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "continue": false,
              "exec": "{{- if not (empty .Key) }}\nbash -c 'echo {{ .Key }} | base64 -d \u003e key.json'\n{{- else }}\necho \"using existing key.json file\"\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "continue": false,
              "env": [
                "HOME={{ .DirektivDir }}"
              ],
              "exec": "gcloud auth activate-service-account {{ .Account }} --key-file=key.json",
              "print": false
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "env": [
                "HOME={{ .DirektivDir }}",
                "CLOUDSDK_CORE_PROJECT={{ .Body.Project }}"
              ],
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"gcloud\": {{ index . 2 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: gcloud\n       action:\n       function: gcloud-build\n       secrets: [\"gcloud\"]\n       input:\n         continue: false\n         account: serviceaccount@project.iam.gserviceaccount.com\n         project: project\n         key: jq(.secrets.gcloud | @base64 )\n         commands:\n         - gcloud compute instances list --format=json",
            "title": "Basic"
          },
          {
            "content": "- id: req\n     type: action\n     action:\n      function: gcloud\n      secrets: [\"gcloud\"]\n      input:\n        account: serviceaccount@project.iam.gserviceaccount.com\n        project: project\n        key: jq(.secrets.gcloud | @base64 )\n        files:\n        - name: test.sh\n          mode: \"0755\"\n          data: |-\n            #!/bin/bash\n            gcloud builds list --format=json\n        commands:\n        - ./test.sh",
            "title": "Running Scripts"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: gcloud\n    image: gcr.io/direktiv/apps/gcloud:1.0\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "CommandsItems0": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command to run",
          "type": "string",
          "example": "gcloud compute instances list --format=json"
        },
        "continue": {
          "description": "Stops excecution if command fails, otherwise proceeds with next command",
          "type": "boolean"
        },
        "print": {
          "description": "If set to false the command will not print the full command with arguments to logs.",
          "type": "boolean",
          "default": true
        },
        "silent": {
          "description": "If set to false the command will not print output to logs.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "GcloudItems0": {
      "type": "object",
      "required": [
        "success",
        "result"
      ],
      "properties": {
        "result": {
          "additionalProperties": false
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
}
